[user]
	name = Mary De NÃ³brega
	email = denobrega.mary@gmail.com
	signingkey = CDE2D50DD9DAE6FF

[fetch]
	prune = true

[push]
    # A much better default than 'matching'. From the man page:
    #
    # Defines the action git push should take if no refspec is given on the
    # command line, no refspec is configured in the remote, and no refspec is
    # implied by any of the options given on the command line. Possible values
    # are:
    #
    # o nothing - do not push anything.
    # o matching - push all matching branches. All branches having the same name
    # in both ends are considered to be matching. This is the default.
    # o upstream - push the current branch to its upstream branch.
    # o tracking - deprecated synonym for upstream.
    # o current - push the current branch to a branch of the same name.
	default = simple

[pull]
    rebase = true

[color]
	diff = auto
	status = auto
	branch = auto
	ui = true

[branch]
    autosetuprebase = always

[core]
	excludesfile = ~/.gitignore_global
	attributesfile = ~/.gitattributes
	editor = vim
	autocrlf = input
	trustctime = false
	precomposeunicode = false
	pager = delta --dark
	ignorecase = false

[help]
	autocorrect = 1

[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true

[diff]
	tool = vimdiff
	compactionHeuristic = true
	indentHeuristic = true

[difftool]
	prompt = false

[diff "json"]
	textconv = python -m json.tool

[diff "word"]
	textconv = docx2txt

[credential]
	helper = osxkeychain

[pager]
	diff = pretty-diff | less --tabs=4 -RFX
	show = pretty-diff | less --tabs=4 -RFX

[color]
	ui = always

[color "diff"]
	meta = yellow bold
	commit = green bold
	frag = magenta bold
	old = red bold
	new = green bold
	whitespace = red reverse

[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = "red bold 52"
	newNormal = "green bold"
	newHighlight = "green bold 22"

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[apply]
	# Detect whitespace errors when applying a patch
	whitespace = fix

[commit]
    template = ~/.gitmessage.txt
	gpgsign = true

[tag]
	gpgsign = true

[gpg]
	program = /usr/local/bin/gpg

[alias]
    lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --all
    count-month = shortlog -sne --since="01 Nov 2016" --before="30 Nov 2016"
    yolo = !git add -A && git commit -m \"$(curl -s whatthecommit.com/index.txt)\"
    clean-local-branches = branch --merged | egrep -v \"(^\\*|master|dev)\" | xargs git branch -d
